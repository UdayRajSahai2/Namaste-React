import React from "react";
import ReactDOM from "react-dom/client";

/*----------------------------------------------------------------------*/
// 1st and 2nd lecture
// React.createElement => React.createElement-JS Object => HTML Element(render)

// //const heading = React.createElement("h1", {id:"heading"}, "Hello World from React!!!!!");
// const parent = React.createElement("div", { id: "parent" },
//     React.createElement("div", { id: "child" },
//        [React.createElement("h1", {}, "I am an h1 tag"),React.createElement("h2", {}, "I am an h2 tag")]
//     )
// );
// console.log(parent);
// //console.log(heading); //React.createElement gives us object so heading is a object . It is not h1 tag yet
// const root = ReactDOM.createRoot(document.getElementById("root"));
// root.render(parent);
// //root.render(heading); // It will take object i.e heading and convert it into h1 tag(HTML) and will put it into DOM

/*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*/
// 3rd lecture

// JSX - is not HTML in JS . It is HTML-like or XML-like syntax
//transpiled(converted to code that JS engine could understand) before it reaches JS engine- done by Parcel-gives responsibility to Babel
// does it for Parcel
// JSX => Babel transpiles it to React.createElement => React.createElement-JS Object => HTML Element(render)

//React Element 
/*------------------*/
const heading  = <h1 className="heading">Namaste react using JSX</h1>;
/*------------------*/

const Title  = () => <h1 className="heading">Namaste react using JSX</h1>;
//React Component : Two Types=> 1. Class Based Component-Old
                            //  2. Functional Component-New
// Functional component is a javascript function which returns react element
//const fn = () => true;
// is same as 
// const fn = () => 
// {
//     return true;
// }

// Example of Component Composition- when you compose two components together
const HeadingComponent = () =>(    
    <div id="s1">
        <Title />
        <h1>Namaste React Functional Component</h1>
        </div>  
);

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(<HeadingComponent />);
// we can render React element like this root.render(heading);
//but in case of React component we can't render like this ,we have to render as shown below:
// root.render(<HeadingComponent />);